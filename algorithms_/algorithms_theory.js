// Алгоритмы
// Сложность Алгоритма - Время за кот. работает тот или иной алгоритм.
// Алгоритмы - это набор последовательных действый кот. решають какую то задачу.
// Сложность алгоритма или его скорость описывается так: 'O(n)': - где '(n)' - кол. операций.
// ---------------------------------------------------------------------------------

// Примеры:
// O(Log2n); O(n); O(n*log2n); O(n*n); O(n!).
// Логарифмы это обратная возведению в степень функция.
// Линейный поиск работает за линейное время, а бинароное за логарифмическое.
// ---------------------------------------------------------------------------------

// Все Основные Алгоритмы:
// 1. Search algorithms ------------------Алгоритмы поиска.
// 2. Sorting algorithms ------------- Алгоритмы сортировки.
// 3. Recursive algorithms ---------- Рекурсивные алгоритмы.
// 4. Algorithms for finding=>	-------- Алгоритмы поиска=>
// =>the shortest path in a graph - =>кратчайщего пути в графе.
// 5. Tree traversal algorithms -- Алгоритмы обхода деревьев.
// 6. Caching algorithms ------------- Алгоритмы кеширования.
// ---------------------------------------------------------------------------------

// 			 	 					Линейный | Бинароный
// 100 эл.  			-		100мс.| 	7мс.
// 10 000 эл.  		-		10сек | 	14мс.
// 10 000 000 эл. - 11 дней | 	32мс.
// Важно! Бинароный алгоритм работает только с отсортированным списком.
// ---------------------------------------------------------------------------------

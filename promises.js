//? Промисы
// С помощью промиса можно поставить на ожидание получение результата. И когда его получаем, то можем его обрабатывать)
// Промис может вернуть ошибку если результат предоставить невозможно
// Три состояние промиса: Ожидание, Исполнен, Отклонен
// - Pending - это состояние - Ожидание
// - Resolve - это состояние - Исполнен
// - Reject - это состояние - Отклонен

//                                                                 /
(' Создание Промиса ');

// Пример:
const myPromise = new Promise((resolve, reject) => {
	/**
	 * Выполнение асинхронных действий
	 *
	 * Внутри этой функции нужно в результате вызвать одну из фунцкций Resolve или Reject
	 */
});
//                                                                  /

//? ---------------------------------------------------------------------

//                                                                 /
(' Получение результата промиса ');

// Пример:
myPromise
	.then((value) => {
		/**
		 * Действия в случае успешного исполнения Промиса
		 * Значение value - это значение, переданное в вызове функции resolve внутри Промиса
		 */
	})

	.catch((error) => {
		/**
		 * Действия в случае отклонения Промиса
		 * Значение error - это значение, переданное в вызове функции reject внутри Промиса
		 */
	});
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Использование промисов и fetch ');

// Пример:
fetch('https://jsonplaceholder.typicode.com/todos')
	.then((response) => {
		console.log(response);
		return response.json();
	})
	.then((json) => console.log(json))
	.catch((error) => console.error(error));
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Упрощение запроса к удаленым серверам и получение данных без двойных Промисов ');

// Пример:
const getData = (url) =>
	new Promise((resolve, reject) =>
		fetch(url)
			.then((response) => response.json())
			.then((json) => resolve(json))
			.catch((error) => reject(error))
	);

getData('https://jsonplaceholder.typicode.com/todos')
	.then((data) => console.log(data))
	.catch((error) => console.log(error.message));
//                                                                 /

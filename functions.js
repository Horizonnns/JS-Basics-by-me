//? Правило работы с функциями
//                                                                 /
(' Примечание: Функции сущ. для того чтобы выполнять один и тот же блок кода многократно с разными вводными даннымы ');
// 1. Называть функции исходя из выполняемых задач. //
// 2. Одна функция должна выполнять одну задачу. //
// 3. Не рекомендуется изменять внешние относительно функции переменные (Не мутировать внешные объекты функции). //
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Функция c мутацией внешных объектов ');
// Внутри функции не рекомендуется мутировать внешние объекты

// Пример:
const apple = {
	name: 'Apple',
	age: 39,
};

function increaseAppleAge(apple) {
	apple.age += 1;
	return apple;
}

increaseAppleAge(apple);
console.log(apple.age);
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Функция без мутация внешных объектов ');

// Пример:
const samsung = {
	name: 'Samsung',
	age: 50,
};

function increaseSamsungAge(samsung) {
	const updatedSamsung = Object.assign({}, samsung);
	updatedSamsung.age += 1;
	return updatedSamsung;
}

const updatedSamsung = increaseSamsungAge(samsung);
console.log(samsung.age);
console.log(updatedSamsung.age);
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Коллбэк Функции ');

// Пример:
function printMyname() {
	console.log('Kasim');
}

console.log('Start');
setTimeout(printMyname, 2000);
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Анонимное Функциональное Выражение - это функция без имени и он исп. чаще всего Коллбэк Функциях ');
// Ф/Выражение нужна для предотвращение присвоение нового значение с пом. пременной -const-
// Здесь -const myFunction- дается как переменная и с пом. его можно вывести результать ф/выражения

// Пример:
const myFunction = function (a, b) {
	let c;
	a = a + 1;
	c = a + b;
	return c;
};

myFunction(5, 5);
console.log(myFunction(5, 5));
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Отложенное сообщение - с пом. ф/выражения. Сообщение появиться через 1с ');

// Пример:
setTimeout(function () {
	console.log('Отложенное сообщение');
}, 1000);
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Стрелочная Функция ');
// Стрелочная Ф. нужна для предотвращение присвоение нового значение с пом. пременной -const-
// Здесь -const myFn- дается как переменная и с пом. его можно вывести результать ф/выражения

// Пример:
const myFn = (a, b) => {
	let c;
	a = a + 1;
	c = a + b;
	return c;
};

myFn(10, 8);
console.log(myFn(10, 8));
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Значения Функции по умолчанию. Пример дата создание поста с неявным возвратом - то есть без return ');

// Пример:
const myFun = (post, addedAt = Date()) => ({
	...post,
	addedAt,
});

const firstPost = {
	id: 1,
	author: 'Kasim',
};

myFun(firstPost);
console.table(myFun(firstPost));
//                                                                 /

//? ---------------------------------------------------------------------

//                                                                 /
(' Значения Функции по умолчанию. Пример дата создание поста с явным возвратом то есть - с return ');

// Пример:
const myFunc = (post, addedAt = Date()) => {
	return Object.assign({ post, addedAt });
};

const sirdPost = {
	id: 1,
	author: 'Kasim',
};

myFunc(sirdPost);
console.table(myFunc(sirdPost));
//                                                                 /
